#!/bin/sh
# CQ Unix Toolkit
# Copyright (C) 2013 Cognifide Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
_usage()
{
    cat <<EOT
Usage: $(basename "${0}") [OPTION...] file1 file2 ... 
Upload CRX ZIP packages to CRX Package Manager using instance URL.
 
Examples:
  cqput -u admin pack.zip        # Upload package named pack.zip from current
                                 # directory
  cqput -i http://localhost:5510 # Upload 2 packages for localhost instance on
        -p secret stuff1.zip     # tcp port 5510 named stuff1.zip and stuff2.zip
        stuff2.zip               # with password provided: secret 

Options:

  -u                    use specified usernamed for connection
  -p                    use provided password for authentication
  -i                    use specified instance URL to connect


EOT
exit 1
}

CWD=$(dirname "${0}")
API="${CWD}/cqapi"
"${API}" -P >/dev/null
if [ ${?} -ne 0 ]
then
    echo "Fatal: cannot find or test cqapi command" >&2
    exit 1
fi

CURLBIN=$("${API}" -c)
if [ ${?} -ne 0 ]
then
    echo "Fatal: cannot find curl" >&2
    exit 1
fi


# API common options
cmdapi=$("${API}" -P "${@}")
username=$(echo "${cmdapi}" | cut -f1)
password=$(echo "${cmdapi}" | cut -f2)
instance=$(echo "${cmdapi}" | cut -f3)
passed=$(echo "${cmdapi}" | cut -f4)
apigetopts=$(echo "${cmdapi}" | cut -f5)

# Custom arguments
while getopts ":${apigetopts}" opt
do
    case ${opt} in
        \?)
            echo "Invalid option: -${OPTARG}" >&2; _usage;;
        :)
            echo "Option -${OPTARG} requires an argument." >&2; _usage;;
    esac
done
shift $((OPTIND-1))

if [ ${#} -eq 0 -o "${passed}" -eq 0 ];
then
    _usage
fi


REFERER="${instance}/crx/packmgr"
AUTH="${username}:${password}"
FILEPATH="/crx/packmgr/service.jsp"
REFERERHEADER="Referer: ${REFERER}"

bad=0
while [ ${#} -ne 0 ] 
do
    file=${1}
    if [ ! -f "${file}" ]
    then
        echo "Cannot find file: '${file}'" >&2
        bad=1
    else
        STATUS=$(${CURLBIN} \
            -k \
            -s \
            --write-out "%{http_code}" \
            -u "${AUTH}" \
            -H "${REFERERHEADER}" \
            -F file=@"${file}" \
            -F force=true \
            -F install=false \
            "${instance}${FILEPATH}")
        EXITCODE=${?}
        "${API}" -C ${EXITCODE}
        STATUSCODE=$(echo "${STATUS}" | tail -n 1)
        STATUS=$(echo "${STATUS}" | sed '$d')
        "${API}" -H "${STATUSCODE}"
        EXITCODE2=${?}
        if [ "${EXITCODE}" -ne 0 -o "${EXITCODE2}" -ne 0 ]
        then
            bad=1
        else
            echo "${STATUS}"
            echo "OK" >&2
        fi
    fi
    shift
done
if [ ${bad} -eq 1 ]
then
    exit 1
fi
