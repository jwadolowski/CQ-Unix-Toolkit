#!/bin/sh
# CQ Unix Toolkit
# Copyright (C) 2013 Cognifide Limited
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
_usage()
{
    cat <<EOT
Usage: $(basename "${0}") [OPTION...]
Invoke TAR PersistenceManager Index merge operation for specified CQ instance 
in the background by default.
 
Examples:
  cqmrg -u admin -f              # Merge indexes in the foreground.
  cqmrg -i http://localhost:5510 # Merge indexes for localhost instance on tcp
                                 # port 5510
  cqmrg -p secret                # Merge indexes in the background using 
                                 # provided password: secret

Options:

  -u                    use specified usernamed for connection
  -p                    use provided password for authentication
  -i                    use specified instance URL to connect
  -f                    invokes merge process in the foreground as blocking 
                        operation

EOT
exit 1
}

CWD=$(dirname "${0}")
API="${CWD}/cqapi"
"${API}" -P >/dev/null
if [ ${?} -ne 0 ]
then
    echo "Fatal: cannot find or test cqapi command" >&2
    exit 1
fi

CURLBIN=$("${API}" -c)
if [ ${?} -ne 0 ]
then
    echo "Fatal: cannot find curl" >&2
    exit 1
fi

# API common options
cmdapi=$("${API}" -P "${@}")
username=$(echo "${cmdapi}" | cut -f1)
password=$(echo "${cmdapi}" | cut -f2)
instance=$(echo "${cmdapi}" | cut -f3)
passed=$(echo "${cmdapi}" | cut -f4)
apigetopts=$(echo "${cmdapi}" | cut -f5)

# Custom arguments
background=true
while getopts ":f${apigetopts}" opt
do
    case ${opt} in
        f)
            background=false;;
        \?)
            echo "Invalid option: -${OPTARG}" >&2; _usage;;
        :)
            echo "Option -${OPTARG} requires an argument." >&2; _usage;;
    esac
done
shift $((OPTIND-1))

if [ ${#} -ge 1 -o "${passed}" -eq 0 ]
then
    _usage
fi


REFERER="${instance}/system/console/jmx/com.adobe.granite%3Atype%3DRepository"
AUTH="${username}:${password}"
FILEPATH="/system/console/jmx/com.adobe.granite%3Atype%3DRepository/op/tarInde\
xMerge/java.lang.Boolean"
REFERERHEADER="Referer: ${REFERER}"

ECHON=$(which echo)
[ ${?} -ne 0 -o -z "${ECHON}" ] && ECHON="echo" || ECHON="${ECHON} -n "
${ECHON} -n 'Invoking TarPM index merge operation...'
STATUS=$(${CURLBIN} \
    -k \
    -s \
    --write-out "%{http_code}" \
    -u "${AUTH}" \
    -H "${REFERERHEADER}" \
    -X POST --data background=${background} \
    "${instance}${FILEPATH}")

EXITCODE=${?}
"${API}" -C ${EXITCODE}

if [ ${EXITCODE} -ne 0 ]
then
    echo "Cannot invoke TarPM index merge operation." >&2
    exit ${EXITCODE}
fi

STATUSCODE=$(echo "${STATUS}" | tail -n 1)
STATUS=$(echo "${STATUS}" | sed '$d;s/(null)//;s/^$/DONE/')
echo "${STATUS}"
"${API}" -H "${STATUSCODE}"

EXITCODE2=${?}
if [ ${EXITCODE2} -ne 0 ]
then
    echo "Cannot invoke TarPM index merge operation." >&2
    exit ${EXITCODE2}
fi

